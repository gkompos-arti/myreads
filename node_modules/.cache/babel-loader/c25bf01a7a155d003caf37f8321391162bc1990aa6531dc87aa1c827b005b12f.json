{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GeorgeKompos\\\\Desktop\\\\dev\\\\myreads\\\\starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport BookshelfContainer from \"./components/BookshelfContainer\";\nimport SearchModal from \"./components/SearchModal\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const getBooks = async () => {\n    const res = await BooksAPI.getAll();\n    setBooks(res);\n  };\n  const updateBookShelf = (book, shelf) => {\n    const update = async () => {\n      const res = await BooksAPI.update(book, shelf);\n      setBooks(prevBooks => prevBooks.map(prevBook => prevBook.id === book.id ? {\n        ...prevBook,\n        shelf\n      } : prevBook));\n    };\n    update();\n  };\n  const searchBooks = query => {\n    const search = async () => {\n      const res = await BooksAPI.search(query);\n      setSearchResults(res);\n    };\n    search();\n  };\n  const addBookToShelf = (book, shelf) => {\n    const update = async () => {\n      await BooksAPI.update(book, shelf);\n      setBooks(prevBooks => prevBooks.map(prevBook => prevBook.id === book.id ? {\n        ...prevBook,\n        shelf\n      } : prevBook));\n      setSearchResults(prevResults => prevResults.map(prevResult => prevResult.id === book.id ? {\n        ...prevResult,\n        shelf\n      } : prevResult));\n    };\n    update();\n  };\n  useEffect(() => {\n    getBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(BookshelfContainer, {\n        books: books,\n        updateBookShelf: updateBookShelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/search\",\n      element: /*#__PURE__*/_jsxDEV(SearchModal, {\n        searchBooks: searchBooks,\n        searchResults: searchResults,\n        addBookToShelf: addBookToShelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dvQZKyQms0nyyxgPLV2AvjwwwvA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Route","Routes","BookshelfContainer","SearchModal","BooksAPI","jsxDEV","_jsxDEV","App","_s","books","setBooks","searchResults","setSearchResults","getBooks","res","getAll","updateBookShelf","book","shelf","update","prevBooks","map","prevBook","id","searchBooks","query","search","addBookToShelf","prevResults","prevResult","children","exact","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/GeorgeKompos/Desktop/dev/myreads/starter/src/App.js"],"sourcesContent":["import \"./App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport BookshelfContainer from \"./components/BookshelfContainer\";\r\nimport SearchModal from \"./components/SearchModal\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\nfunction App() {\r\n  const [books, setBooks] = useState([]);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const getBooks = async () => {\r\n    const res = await BooksAPI.getAll();\r\n    setBooks(res);\r\n  };\r\n\r\n\r\n  const updateBookShelf = (book, shelf) => {\r\n    const update = async () => {\r\n      const res = await BooksAPI.update(book, shelf);\r\n      setBooks((prevBooks) => prevBooks.map((prevBook) => \r\n          prevBook.id === book.id ? { ...prevBook, shelf } : prevBook\r\n        )\r\n      );\r\n    };\r\n    update();\r\n  };\r\n\r\n  const searchBooks = (query) => {\r\n    const search = async () => {\r\n      const res = await BooksAPI.search(query);\r\n      setSearchResults(res);\r\n    };\r\n    search();\r\n  }\r\n\r\n  const addBookToShelf = (book, shelf) => {\r\n    const update = async () => {\r\n      await BooksAPI.update(book, shelf);\r\n      setBooks((prevBooks) =>\r\n        prevBooks.map((prevBook) =>\r\n          prevBook.id === book.id ? { ...prevBook, shelf } : prevBook\r\n        )\r\n      );\r\n      setSearchResults((prevResults) =>\r\n        prevResults.map((prevResult) =>\r\n          prevResult.id === book.id ? { ...prevResult, shelf } : prevResult\r\n        )\r\n      );\r\n    };\r\n    update();\r\n  };\r\n\r\n  \r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    getBooks();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        element={\r\n          <BookshelfContainer books={books} updateBookShelf={updateBookShelf}/>\r\n        }\r\n      />\r\n      <Route \r\n        path=\"/search\"\r\n        element={\r\n          <SearchModal searchBooks={searchBooks} searchResults={searchResults} addBookToShelf={addBookToShelf}/>\r\n        }\r\n      />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}